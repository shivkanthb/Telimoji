var imojiClient = new (require('../index'))({
    apiKey: process.env.API_KEY,
    apiSecret: process.env.API_SECRET
}), assert = require('assert');


(function () {
    imojiClient.search({
        query: 'cats'
    })
    .then(function (results) {
        assert.equal(results.status, 'SUCCESS', 'Imoij server response status');
        assert.notEqual(results.results, null, 'Search for cats has results');
        console.log('search for cats passed successfully');

        return imojiClient.featured();
    })
    .then(function (results) {
        assert.equal(results.status, 'SUCCESS', 'Imoij server response status');
        assert.notEqual(results.results, null, 'Featured has results');
        console.log('featured passed successfully');

        return imojiClient.categories();
    })
    .then(function (results) {
        assert.equal(results.status, 'SUCCESS', 'Imoij server response status');
        assert.notEqual(results.categories, null, 'Categories has results');
        console.log('categories passed successfully');

        return imojiClient.fetchByIds({ids: 'ac6e038f-3392-46a6-a1fb-573cd2fea1cb'});
    })
    .then(function (results) {
        assert.equal(results.status, 'SUCCESS', 'Imoij server response status');
        assert.notEqual(results.results, null, 'fetchByIds has results');
        console.log('fetchByIds passed successfully');

        return imojiClient.markUsage({imojiId: 'ac6e038f-3392-46a6-a1fb-573cd2fea1cb', originIdentifier: 'node sdk test'});
    })
    .then(function (results) {
        assert.equal(results.status, 'SUCCESS', 'Imoij server response status');
        console.log('markUsage passed successfully');
        
        return imojiClient.reportAbusive({imojiId: 'ac6e038f-3392-46a6-a1fb-573cd2fea1cb', reason: 'no real reason :('});
    })
    .then(function (results) {
        assert.equal(results.status, 'SUCCESS', 'Imoij server response status');
        console.log('reportAbusive passed successfully');
        
        return imojiClient.saveToFavorites({imojiId: 'ac6e038f-3392-46a6-a1fb-573cd2fea1cb'});
    })
    .then(function (results) {
        assert.equal(results.status, 'SUCCESS', 'Imoij server response status');
        console.log('saveToFavorites passed successfully');
        
        return imojiClient.fetchCollection({collectionType: 'recents'});
    })
    .then(function (results) {
        assert.equal(results.status, 'SUCCESS', 'Imoij server response status');
        assert.notEqual(results.results, null, 'Collection has results');
        console.log('fetchCollection passed successfully');

        console.log('All tests passed successfully');
        return true;
    })
    .catch(function (error) {
        console.error(error);
    });
})();
